name: Deploy
on:
  push:
    branches: [ main ]   

jobs:
  version:
    runs-on: windows-latest
    outputs: 
      version: ${{ steps.newversion.outputs.version }}"
    steps:
    - name: Checkout Sources
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: CurrentVersion 
      id: current
      shell: pwsh
      run: | 
        $currentVersion = git describe --abbrev=0 --tags --match "v[0-9]*.[0-9]*.[0-9]*"
        Write-Host $currenVersion
        $env:GITHUB_OUTPUT = "currentVersion=$($currentVersion)"
    - name: Set New Version
      id: newversion
      env:
        currentV: ${{ steps.current.outputs.currentVersion }}"
      shell: pwsh
      run: |
            $currentVersion = git describe --match "$($env:currentV)" --long
            $versionParts = $currentVersion.Split('-')
            $v = $versionParts[0]
            $increment = [int]$versionParts[1]
            
            if ($increment -gt 0) {
                $increment = 1
            }

            $vparts = $v.Split('.')
            $vparts[2] = "$([int]$vparts[2] + [int]$increment)"
            $v = $vparts -join '.'
            $v = "$($v)"
            Write-Output "::set-output name=version::$($v.Trim().Replace("`t", '') | ConvertTo-Json)"

      
