name: Release 1.2.x
on:
  push:
    branches: [ main ]   

jobs:
  test:
    runs-on: windows-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup .NET 6
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: "Build and Test"
        run: |
          dotnet build
          dotnet test
  version:
    needs: test
    runs-on: windows-latest
    outputs: 
      version: ${{ steps._version.outputs.version }}
    steps:
    - name: Latest Tag
      shell: pwsh
      id: _version
      run: |
        $currentVersion = git describe --long
        Write-Host "Current Version found: $($currentVersion)"
        $versionParts = $currentVersion.Split('-')
        $v = $versionParts[0]
        $increment = 1
        $commit = $versionParts[2]
        if ($v -notmatch '^v([0-9]{1,4})(\.([0-9]{1,4}))(\.([0-9]{1,4}))$') {
            Write-Error "Version $($v) doesnt match pattern ^v([0-9]{1,4})(\.([0-9]{1,4}))(\.([0-9]{1,4}))$"
            throw 
        }
        
        $vparts = $v.Split('.')
        $vparts[2] = "$([int]$vparts[2] + 1)"
        $v = $vparts -join '.'
        $v = "$($v)"
        Write-Output "::set-output name=version::$($v.Trim().Replace("`t", '') | ConvertTo-Json)"
  prepublish:
    needs: test
    runs-on: windows-latest
    outputs:
      description: ${{ steps.meta.outputs.description }}
      changeinfo: ${{ steps.meta.outputs.changeinfo }}
      version: ${{ steps.v.outputs.version }}
    steps:
    
    - name: Checkout Sources
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name : Get Meta Data
      shell: pwsh
      id: meta
      run: |
        [xml]$xml = get-content "src/TheGamesDBApiWrapper.csproj"    
        $description = $xml.SelectSingleNode("//Description").InnerText;
        $changes = $xml.SelectSingleNode("//PackageReleaseNotes").InnerText;
        Write-Output "::set-output name=description::$($description.Trim().Replace("`t", '') | ConvertTo-Json)"
        Write-Output "::set-output name=changeinfo::$($changes.Trim().Replace("`t", '') | ConvertTo-Json)"
    - name: Generate Version Number
      shell: pwsh
      id: v
      run: | 
        Write-Output "::set-output name=version::${{needs.version.outputs.version}}"
    - name: Print Version
      run: echo '${{ steps.v.outputs.version }}'
  publish:
    needs: prepublish
    if: ${{ needs.prepublish.outputs.version && needs.prepublish.outputs.version != ''}}
    runs-on: windows-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0    
      - name: Print Description
        id: printdescription
        run: echo '${{fromJSON(needs.prepublish.outputs.description)}}'
      - name: Print Change Info
        run: echo '${{fromJSON(needs.prepublish.outputs.changeinfo) }}'
      - name: Create Release and Tag
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{ needs.prepublish.outputs.version  }}
          release_name: Release v${{ needs.prepublish.outputs.version  }}
          body: |
           # Info
           ${{fromJSON(needs.prepublish.outputs.description)}}

           # Changes in v${{ needs.prepublish.outputs.version  }}
           ${{fromJSON(needs.prepublish.outputs.changeinfo)}}
          draft: false
          prerelease: false
      - name: Setup .NET 6
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      
